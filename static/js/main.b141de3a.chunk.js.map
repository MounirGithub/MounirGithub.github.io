{"version":3,"sources":["header/header.js","about/about.js","resume/resume.js","portfolio/portfolio.js","testimonials/testimonials.js","contactus/contactus.js","footer/footer.js","resumeData.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","resumeData","this","props","Fragment","id","className","href","title","name","role","roleDescription","socialLinks","map","item","key","url","target","Component","About","src","alt","aboutme","address","website","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","CompanyName","MonthOfLeaving","YearOfLeaving","skillsDescription","skills","skillname","toLowerCase","Porfolio","portfolio","imgurl","description","Testimonials","testimonials","ContactUs","linkedinId","Footer","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"qMACqBA,E,uKAEb,IAAIC,EAAaC,KAAKC,MAAMF,WAC5B,OACI,kBAAC,IAAMG,SAAP,KAEI,4BAAQC,GAAG,QACP,yBAAKA,GAAG,YACJ,uBAAGC,UAAU,aAAaC,KAAK,YAAYC,MAAM,mBAAjD,mBACA,uBAAGF,UAAU,aAAaC,KAAK,IAAIC,MAAM,mBAAzC,mBACA,wBAAIH,GAAG,MAAMC,UAAU,OACnB,wBAAIA,UAAU,WAAU,uBAAGA,UAAU,eAAeC,KAAK,SAAjC,SACxB,4BAAI,uBAAGD,UAAU,eAAeC,KAAK,UAAjC,UACJ,4BAAI,uBAAGD,UAAU,eAAeC,KAAK,WAAjC,WACJ,4BAAI,uBAAGD,UAAU,eAAeC,KAAK,cAAjC,UACJ,4BAAI,uBAAGD,UAAU,eAAeC,KAAK,iBAAjC,iBACJ,4BAAI,uBAAGD,UAAU,eAAeC,KAAK,YAAjC,cAIZ,yBAAKD,UAAU,cACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,uBAAd,QAA0CL,EAAWQ,KAArD,KACA,sCAAYR,EAAWS,KAAvB,IAA8BT,EAAWU,iBAEzC,6BACA,wBAAIL,UAAU,UAENL,EAAWW,aAAeX,EAAWW,YAAYC,KAAI,SAAAC,GACjD,OACI,wBAAIC,IAAKD,EAAKL,MACV,uBAAGF,KAAMO,EAAKE,IAAKC,OAAO,UAAS,uBAAGX,UAAWQ,EAAKR,oBAUlF,uBAAGA,UAAU,cACT,uBAAGA,UAAU,eAAeC,KAAK,UAAS,uBAAGD,UAAU,6B,GA1C3CY,aCAfC,E,uKAEb,IAAIlB,EAAaC,KAAKC,MAAMF,WAC5B,OACI,6BAASI,GAAG,SACR,yBAAKC,UAAU,OAEX,yBAAKA,UAAU,iBAEX,yBAAKA,UAAU,cAAcc,IAAI,wBAAwBC,IAAI,MAIjE,yBAAKf,UAAU,yBAEX,wCACA,2BAEQL,EAAWqB,SAInB,yBAAKhB,UAAU,OAEX,yBAAKA,UAAU,2BAEX,+CACA,uBAAGA,UAAU,WACT,8BAAOL,EAAWQ,MAClB,6BACA,8BACKR,EAAWsB,SAEhB,6BACA,8BAAOtB,EAAWuB,mB,GAlCnBN,aCAdO,E,uKAEb,IAAIxB,EAAaC,KAAKC,MAAMF,WAC5B,OACI,6BAASI,GAAG,UAER,yBAAKC,UAAU,iBAEX,yBAAKA,UAAU,4BACX,4BAAI,6CAGR,yBAAKA,UAAU,yBAEPL,EAAWyB,WAAazB,EAAWyB,UAAUb,KAAI,SAACC,GAC9C,OACI,yBAAKR,UAAU,YACX,yBAAKA,UAAU,kBACX,4BAAKQ,EAAKa,gBACV,uBAAGrB,UAAU,QACRQ,EAAKc,eACN,wCAFJ,IAEwB,wBAAItB,UAAU,QAAQQ,EAAKe,eAA3B,IAA4Cf,EAAKgB,gBACzE,2BACKhB,EAAKiB,qBAStC,yBAAKzB,UAAU,YACX,yBAAKA,UAAU,4BACX,4BAAI,wCAGR,yBAAKA,UAAU,yBAEPL,EAAW+B,MAAQ/B,EAAW+B,KAAKnB,KAAI,SAACC,GACpC,OACI,yBAAKR,UAAU,YACX,yBAAKA,UAAU,kBACX,4BAAKQ,EAAKmB,aACV,uBAAG3B,UAAU,QACRQ,EAAKc,eACN,wCAFJ,IAEwB,wBAAItB,UAAU,QAAQQ,EAAKoB,eAA3B,IAA4CpB,EAAKqB,gBACzE,2BACKrB,EAAKiB,qBAatC,yBAAKzB,UAAU,aAEX,yBAAKA,UAAU,4BACX,4BAAI,0CAGR,yBAAKA,UAAU,yBAEX,2BACKL,EAAWmC,mBAGhB,yBAAK9B,UAAU,QAEX,wBAAIA,UAAU,UAENL,EAAWoC,QAAUpC,EAAWoC,OAAOxB,KAAI,SAACC,GACxC,OACI,4BACI,0BAAMR,UAAS,qBAAgBQ,EAAKwB,UAAUC,iBACvC,4BAAKzB,EAAKwB,wB,GAjF7BpB,aCAfsB,E,uKAEb,IAAIvC,EAAaC,KAAKC,MAAMF,WAC5B,OACI,6BAASI,GAAG,aACR,yBAAKC,UAAU,OACX,yBAAKA,UAAU,4BACX,2DACA,yBAAKD,GAAG,oBAAoBC,UAAU,oCAE9BL,EAAWwC,WAAaxC,EAAWwC,UAAU5B,KAAI,SAACC,GAC9C,OACI,yBAAKR,UAAU,0BACX,yBAAKA,UAAU,aACX,uBAAGC,KAAK,aACJ,yBAAKa,IAAG,UAAKN,EAAK4B,QAAUpC,UAAU,aACtC,yBAAKA,UAAU,WACX,yBAAKA,UAAU,uBACX,4BAAKQ,EAAKL,MACV,2BAAIK,EAAK6B,6B,GAnB/BzB,aCAjB0B,E,uKAEb,IAAI3C,EAAaC,KAAKC,MAAMF,WAC5B,OACI,6BAASI,GAAG,gBACR,yBAAKC,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,0BACX,4BAAI,uDAER,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,cACX,wBAAIA,UAAU,UAENL,EAAW4C,cAAgB5C,EAAW4C,aAAahC,KAAI,SAACC,GACpD,OACI,4BACI,oCACI,2BACKA,EAAK6B,aAEV,8BAAO7B,EAAKL,aAX5C,KAJJ,KADJ,KADJ,U,GAJ8BS,aCArB4B,E,uKAEb,IAAI7C,EAAaC,KAAKC,MAAMF,WAC5B,OACI,6BAASI,GAAG,WACR,yBAAKC,UAAU,oBACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,QAAb,+DAKR,yBAAKA,UAAU,OACX,2BAAOA,UAAU,gCACb,yBAAKA,UAAU,UACX,0CACTL,EAAW8C,oB,GAhBS7B,aCAlB8B,E,uKAEb,IAAI/C,EAAaC,KAAKC,MAAMF,WAC5B,OACI,gCACI,yBAAKK,UAAU,OACX,yBAAKA,UAAU,kBACX,wBAAIA,UAAU,gBAENL,EAAWW,aAAeX,EAAWW,YAAYC,KAAI,SAACC,GAClD,OACI,4BACI,uBAAGP,KAAMO,EAAKE,KACV,uBAAGV,UAAWQ,EAAKR,kBAO3C,wBAAIA,UAAU,aACV,0DACA,yCAAc,uBAAGE,MAAM,aAAaD,KAAK,8BAA3B,iBAGtB,yBAAKF,GAAG,UAAS,uBAAGC,UAAU,eAAeE,MAAM,cAAcD,KAAK,SAAQ,uBAAGD,UAAU,yB,GAzB3EY,aCIrBjB,EALE,CACb,aAAgB,iCAChB,KAAQ,yBACR,KAAQ,sBCsBGgD,E,uKAbX,OACE,yBAAK3C,UAAU,OACb,kBAAC,EAAD,CAAQL,WAAYA,IACpB,kBAAC,EAAD,CAAOA,WAAYA,IACnB,kBAAC,EAAD,CAAQA,WAAYA,IACpB,kBAAC,EAAD,CAAWA,WAAYA,IACvB,kBAAC,EAAD,CAAcA,WAAYA,IAC1B,kBAAC,EAAD,CAAWA,WAAYA,IACvB,kBAAC,EAAD,CAAQA,WAAYA,S,GAVViB,aCAZgC,EAAcC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DAsCR,SAASC,EAAgBC,GACrBC,UAAUC,cACLC,SAASH,GACTI,MAAK,SAAAC,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBG,QACbT,UAAUC,cAAcS,WAKxBC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAM/BC,OAAM,SAAAC,GACHH,QAAQG,MAAM,4CAA6CA,MCzEvEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDclC,WACX,GAA6C,kBAAmBlB,UAAW,CAGvE,GADkB,IAAImB,IAAIC,GAAwB1B,OAAOC,UAC3C0B,SAAW3B,OAAOC,SAAS0B,OAIrC,OAGJ3B,OAAO4B,iBAAiB,QAAQ,WAC5B,IAAMvB,EAAK,UAAMqB,GAAN,sBAEP5B,IAiDhB,SAAiCO,GAE7BwB,MAAMxB,GACDI,MAAK,SAAAqB,GAGsB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C5B,UAAUC,cAAc4B,MAAM1B,MAAK,SAAAC,GAC/BA,EAAa0B,aAAa3B,MAAK,WAC3BT,OAAOC,SAASoC,eAKxBjC,EAAgBC,MAGvBc,OAAM,WACHF,QAAQC,IACJ,oEArEAoB,CAAwBjC,GAIxBC,UAAUC,cAAc4B,MAAM1B,MAAK,WAC/BQ,QAAQC,IACJ,gHAMRd,EAAgBC,OCzChCkC,I","file":"static/js/main.b141de3a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <React.Fragment>\n                {/*generated code*/}\n                <header id=\"home\">\n                    <nav id=\"nav-wrap\">\n                        <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n                        <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n                        <ul id=\"nav\" className=\"nav\">\n                            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n                            <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n                            <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n                            <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n                            <li><a className=\"smoothscroll\" href=\"#testimonials\">Testimonials</a></li>\n                            <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n                        </ul>\n                    </nav>\n\n                    <div className=\"row banner\">\n                        <div className=\"banner-text\">\n                            <h1 className=\"responsive-headline\">I am {resumeData.name}.</h1>\n                            <h3>I am a {resumeData.role}.{resumeData.roleDescription}\n                            </h3>\n                            <hr />\n                            <ul className=\"social\">\n                                {\n                                    resumeData.socialLinks && resumeData.socialLinks.map(item => {\n                                        return (\n                                            <li key={item.name}>\n                                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\n                                            </li>\n                                        )\n                                    }\n                                    )\n                                }\n                            </ul>\n                        </div>\n                    </div>\n\n                    <p className=\"scrolldown\">\n                        <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n                    </p>\n\n                </header>\n            </React.Fragment>\n        );\n    }\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <section id=\"about\">\n                <div className=\"row\">\n\n                    <div className=\"three columns\">\n\n                        <img className=\"profile-pic\" src=\"images/profilepic.jpg\" alt=\"\" />\n\n                    </div>\n\n                    <div className=\"nine columns main-col\">\n\n                        <h2>About Me</h2>\n                        <p>\n                            {\n                                resumeData.aboutme\n                            }\n                        </p>\n\n                        <div className=\"row\">\n\n                            <div className=\"columns contact-details\">\n\n                                <h2>Contact Details</h2>\n                                <p className=\"address\">\n                                    <span>{resumeData.name}</span>\n                                    <br></br>\n                                    <span>\n                                        {resumeData.address}\n                                    </span>\n                                    <br></br>\n                                    <span>{resumeData.website}</span>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}","import React, { Component } from 'react';\nexport default class Resume extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <section id=\"resume\">\n\n                <div className=\"row education\">\n\n                    <div className=\"three columns header-col\">\n                        <h1><span>Education</span></h1>\n                    </div>\n\n                    <div className=\"nine columns main-col\">\n                        {\n                            resumeData.education && resumeData.education.map((item) => {\n                                return (\n                                    <div className=\"row item\">\n                                        <div className=\"twelve columns\">\n                                            <h3>{item.UniversityName}</h3>\n                                            <p className=\"info\">\n                                                {item.specialization}\n                                                <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\n                                            <p>\n                                                {item.Achievements}\n                                            </p>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                <div className=\"row work\">\n                    <div className=\"three columns header-col\">\n                        <h1><span>Work</span></h1>\n                    </div>\n\n                    <div className=\"nine columns main-col\">\n                        {\n                            resumeData.work && resumeData.work.map((item) => {\n                                return (\n                                    <div className=\"row item\">\n                                        <div className=\"twelve columns\">\n                                            <h3>{item.CompanyName}</h3>\n                                            <p className=\"info\">\n                                                {item.specialization}\n                                                <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                                            <p>\n                                                {item.Achievements}\n                                            </p>\n                                        </div>\n\n                                    </div>\n\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n\n\n                <div className=\"row skill\">\n\n                    <div className=\"three columns header-col\">\n                        <h1><span>Skills</span></h1>\n                    </div>\n\n                    <div className=\"nine columns main-col\">\n\n                        <p>\n                            {resumeData.skillsDescription}\n                        </p>\n\n                        <div className=\"bars\">\n\n                            <ul className=\"skills\">\n                                {\n                                    resumeData.skills && resumeData.skills.map((item) => {\n                                        return (\n                                            <li>\n                                                <span className={`bar-expand ${item.skillname.toLowerCase()}`}>\n                                                </span><em>{item.skillname}</em>\n                                            </li>\n                                        )\n                                    })\n                                }\n\n                            </ul>\n\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </section>\n        );\n    }\n}","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <section id=\"portfolio\">\n                <div className=\"row\">\n                    <div className=\"twelve columns collapsed\">\n                        <h1>Check Out Some of My Works.</h1>\n                        <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n                            {\n                                resumeData.portfolio && resumeData.portfolio.map((item) => {\n                                    return (\n                                        <div className=\"columns portfolio-item\">\n                                            <div className=\"item-wrap\">\n                                                <a href=\"#modal-01\">\n                                                    <img src={`${item.imgurl}`} className=\"item-img\" />\n                                                    <div className=\"overlay\">\n                                                        <div className=\"portfolio-item-meta\">\n                                                            <h5>{item.name}</h5>\n                                                            <p>{item.description}</p>\n                                                        </div>\n                                                    </div>\n                                                </a>\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}","import React, { Component } from 'react';\nexport default class Testimonials extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <section id=\"testimonials\">\n                <div className=\"text-container\">\n                    <div className=\"row\">\n                        <div className=\"two columns header-col\">\n                            <h1><span>Client Testimonials</span></h1>\n                        </div>\n                        <div className=\"ten columns flex-container\">\n                            <div className=\"flexslider\">\n                                <ul className=\"slides\">\n                                    {\n                                        resumeData.testimonials && resumeData.testimonials.map((item) => {\n                                            return (\n                                                <li>\n                                                    <blockquote>\n                                                        <p>\n                                                            {item.description}\n                                                        </p>\n                                                        <cite>{item.name}</cite>\n                                                    </blockquote>\n                                                </li>\n                                            )\n                                        })\n                                    }\n                                </ul>\n                            </div> {/* div.flexslider ends */}\n                        </div> {/* div.flex-container ends */}\n                    </div> {/* row ends */}\n                </div>  {/* text-container ends */}\n            </section>\n        );\n    }\n}","import React, { Component } from 'react';\nexport default class ContactUs extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <section id=\"contact\">\n                <div className=\"row section-head\">\n                    <div className=\"ten columns\">\n                        <p className=\"lead\">\n                            Feel free to contact me for any work or suggestions below\n              </p>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <aside className=\"eigth columns footer-widgets\">\n                        <div className=\"widget\">\n                            <h4>Linked in :\n                  {resumeData.linkedinId}\n                            </h4>\n                        </div>\n                    </aside>\n                </div>\n            </section>\n        );\n    }\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return (\n            <footer>\n                <div className=\"row\">\n                    <div className=\"twelve columns\">\n                        <ul className=\"social-links\">\n                            {\n                                resumeData.socialLinks && resumeData.socialLinks.map((item) => {\n                                    return (\n                                        <li>\n                                            <a href={item.url}>\n                                                <i className={item.className} />\n                                            </a>\n                                        </li>\n                                    )\n                                })\n                            }\n                        </ul>\n                        <ul className=\"copyright\">\n                            <li>© Copyright 2014 CeeVee</li>\n                            <li>Design by <a title=\"Styleshout\" href=\"http://www.styleshout.com/\">Styleshout</a></li>\n                        </ul>\n                    </div>\n                    <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n                </div>\n            </footer>\n        );\n    }\n}","let resumeData = {\n    \"imagebaseurl\": \"https://MounirGithub.github.io\",\n    \"name\": \"Mounir Benabderrahmane\",\n    \"role\": \"Frontend Developer\"\n}\nexport default resumeData","import React, { Component } from 'react';\nimport Header from './header/header';\nimport About from './about/about';\nimport Resume from './resume/resume';\nimport Portfolio from './portfolio/portfolio';\nimport Testimonials from './testimonials/testimonials';\nimport ContactUs from './contactus/contactus';\nimport Footer from './footer/footer';\nimport resumeData from './resumeData';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData} />\n        <About resumeData={resumeData} />\n        <Resume resumeData={resumeData} />\n        <Portfolio resumeData={resumeData} />\n        <Testimonials resumeData={resumeData} />\n        <ContactUs resumeData={resumeData} />\n        <Footer resumeData={resumeData} />\n      </div>\n    );\n  }\n}\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}